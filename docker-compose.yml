version: "3.3"
services:
    frontend:
        restart: on-failure
        build: ./frontend
        container_name: frontend
        command: npm run dev -- --host
        ports:
            - 3000:3000
            - 24678:24678
        volumes:
            - ./frontend:/app
            - /app/node_modules

    backend:
        restart: always
        build: ./backend
        container_name: backend
        volumes:
            - ./backend:/app
        ports:
            - 2000:2000
        depends_on:
            - mongo
            - rel_db
            - graph_db
        links:
            - rel_db
            - mongo

    mongo:
        image: mongo:latest
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: rootpassword
        ports:
            - 27017:27017
        volumes:
            - mongodb_data_container:/data/db
    mongo-express:
        image: mongo-express
        restart: always
        ports:
        - 8081:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: rootpassword
            ME_CONFIG_MONGODB_URL: mongodb://root:rootpassword@mongo:27017/
        depends_on:
            - mongo
    rel_db:
        image: postgres
        container_name: rel_db
        environment: 
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: mandatory
        volumes:
            - pgdata:/var/lib/postgresql/data
        ports:
            - 5432:5432

    graph_db:
        image: neo4j
        restart: unless-stopped
        ports:
            - 7474:7474
            - 7687:7687
        container_name: graph_db
        volumes:
            - ./conf:/conf
            - ./graph_data:/data
            - ./import:/import
            - ./logs:/logs
            - ./plugins:/plugins
        environment:
            - NEO4J_AUTH=none
            - NEO4J_dbms_security_auth__enabled=false

volumes:
    pgdata:
    mongodb_data_container:
    graph_data:
